AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  ### Stack Configuration
  ProjectName:
    Type: String
    Description: "[REQUIRED] The name of this project."

  ### Trail Configuration - General
  TrailName:
    Type: String
    Description: "[REQUIRED] The name of CloudTrail trail."
  
  ### Trail Configuration - CloudWatch Logs
  EnableLogGroup:
    Type: String
    Description: "[REQUIRED] Enable of disable logging to CloudWatch logs from CloudTrail trail."
    AllowedValues:
      - Enable
      - Disable
    Default: Enable
  
  LogGroupName:
    Type: String
    Description: "[optional] The name of CloudWatch Logs LogGroup for CloudTrail trail."
    Default: ""
  
  LogRoleName:
    Type: String
    Description: "[optional] The name of CloudWatch Logs IAM Role for CloudTrail trail."
    Default: ""

  ### Trail Configuration - S3
  BucketName:
    Type: String
    Description: "[optional] The name of bucket."
    Default: ""
  
  BucketPrefix:
    Type: String
    Description: "[optional] The prefix of bucket."
    Default: ""
  
  ### Trail Configuration - KMS
  KmsKeyAlias:
    Type: String
    Description: "[REQUIRED] The name of KMS key. (MUST BE STARTED WITH 'alias/')"
    AllowedPattern: ^alias/[a-zA-Z0-9/_-]+$

Metadata:
    AWS::CloudFormation::Interface:
      ParameterGroups:
        - Label:
            default: Stack Configuration
          Parameters:
            - ProjectName
        
        - Label:
            default: Trail Configuration - General
          Parameters:
            - TrailName
        
        - Label:
            default: Trail Configuration - CloudWatch Logs
          Parameters:
            - EnableLogGroup
            - LogGroupName
            - LogRoleName
        
        - Label:
            default: Trail Configuration - S3
          Parameters:
            - BucketName
            - BucketPrefix
        
        - Label:
            default: Trail Configuration - KMS
          Parameters:
            - KmsKeyAlias

Conditions:
  IsEnableLogGroup: !Equals [!Ref EnableLogGroup, "Enable"]
  UseLogGroupName: !Not [!Equals [!Ref LogGroupName, ""]]
  UseLogRoleName: !Not [!Equals [!Ref LogRoleName, ""]]
  UseBucketName: !Not [!Equals [!Ref BucketName, ""]]
  UseBucketPrefix: !Not [!Equals [!Ref BucketPrefix, ""]]

Resources:
  KmsKey:
    Type: AWS::KMS::Key
    Properties:
      Enabled: true
      EnableKeyRotation: true
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: "kms:*"
            Resource: "*"
          - Sid: Allow CloudTrail to encrypt logs
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: kms:GenerateDataKey*
            Resource: "*"
            Condition:
              StringEquals:
                aws:SourceArn: !Sub arn:aws:cloudtrail:${AWS::Region}:${AWS::AccountId}:trail/${TrailName}
              StringLike:
                kms:EncryptionContext:aws:cloudtrail:arn: !Sub arn:aws:cloudtrail:*:${AWS::AccountId}:trail/*
          - !If
            - IsEnableLogGroup
            - Effect: Allow
              Principal:
                Service: !Sub logs.${AWS::Region}.amazonaws.com
              Action:
                - kms:Encrypt*
                - kms:Decrypt*
                - kms:ReEncrypt*
                - kms:GenerateDataKey*
                - kms:Describe*
              Resource: "*"
              Condition:
                ArnEquals:
                  kms:EncryptionContext:aws:logs:arn: !If
                    - UseLogGroupName
                    - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:${LogGroupName}
                    - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/cloudtrail/${TrailName}
            - !Ref AWS::NoValue
      KeySpec: SYMMETRIC_DEFAULT
      KeyUsage: ENCRYPT_DECRYPT
      MultiRegion: false
      PendingWindowInDays: 7
      Tags:
        - Key: project
          Value: !Ref ProjectName

  KmsAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Ref KmsKeyAlias
      TargetKeyId: !Ref KmsKey

  LogGroup:
    Type: AWS::Logs::LogGroup
    Condition: IsEnableLogGroup
    Properties:
      KmsKeyId: !GetAtt KmsKey.Arn
      LogGroupName: !If
        - UseLogGroupName
        - !Ref LogGroupName
        - !Sub /aws/cloudtrail/${TrailName}
      RetentionInDays: 90
      Tags:
        - Key: project
          Value: !Ref ProjectName
   
  LogRole:
    Type: AWS::IAM::Role
    Condition: IsEnableLogGroup
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: sts:AssumeRole
      MaxSessionDuration: 3600
      Path: /service-role/
      Policies:
        - PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Sid: AWSCloudTrailCreateLogStream
              Effect: Allow
              Action:
              - logs:CreateLogStream
              Resource:
              - !GetAtt LogGroup.Arn
            - Sid: AWSCloudTrailPutLogEvents
              Effect: Allow
              Action:
              - logs:PutLogEvents
              Resource:
              - !GetAtt LogGroup.Arn
          PolicyName: CloudTrailPolicyForCloudWatchLogs
      RoleName: !If
        - UseLogRoleName
        - !Ref LogRoleName
        - !Sub cloudtrail-log-${AWS::Region}-${TrailName}

  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - BucketKeyEnabled: true
            ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: !GetAtt KmsKey.Arn
      BucketName: !If
        - UseBucketName
        - !Ref BucketName
        - !Join
          - "-"
          - - cloudtrail
            - !Ref AWS::Region
            - !Ref TrailName
            - !Select [2, !Split ['/', !Ref AWS::StackId]]
      IntelligentTieringConfigurations:
        - Id: intelligence-tiering
          Status: Enabled
          Tierings:
            - AccessTier: ARCHIVE_ACCESS
              Days: 90
            - AccessTier: DEEP_ARCHIVE_ACCESS 
              Days: 180
      LifecycleConfiguration:
        Rules:
          - Id: intelligence-tiering
            NoncurrentVersionTransitions:
              - StorageClass: STANDARD_IA
                TransitionInDays: 30
              - StorageClass: ONEZONE_IA
                TransitionInDays: 90
              - StorageClass: GLACIER
                TransitionInDays: 180
              - StorageClass: DEEP_ARCHIVE
                TransitionInDays: 360
            Status: Enabled
            Transitions:
              - StorageClass: INTELLIGENT_TIERING
                TransitionInDays: 0
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerEnforced
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: project
          Value: !Ref ProjectName
      VersioningConfiguration:
        Status: Enabled
  
  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref Bucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AWSCloudTrailAclCheck20150319
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:GetBucketAcl
            Resource: !GetAtt Bucket.Arn
            Condition:
              StringEquals:
                AWS:SourceArn: !Sub arn:aws:cloudtrail:${AWS::Region}:${AWS::AccountId}:trail/${TrailName}
          - Sid: AWSCloudTrailWrite20150319
            Effect: Allow
            Principal:
              Service: cloudtrail.amazonaws.com
            Action: s3:PutObject
            Resource: !Sub
              - "${bucket_arn}${prefix}/AWSLogs/${account_id}/*"
              - bucket_arn: !GetAtt Bucket.Arn
                prefix: !If
                  - UseBucketPrefix
                  - !Sub "/${BucketPrefix}"
                  - ""
                account_id: !Ref AWS::AccountId
            Condition:
              StringEquals:
                AWS:SourceArn: !Sub arn:aws:cloudtrail:${AWS::Region}:${AWS::AccountId}:trail/${TrailName}
                s3:x-amz-acl: bucket-owner-full-control
        
  Trail:
    Type: AWS::CloudTrail::Trail
    DependsOn: BucketPolicy
    Properties:
      CloudWatchLogsLogGroupArn: !If
        - IsEnableLogGroup
        - !GetAtt LogGroup.Arn
        - !Ref AWS::NoValue
      CloudWatchLogsRoleArn: !If
        - IsEnableLogGroup
        - !GetAtt LogRole.Arn
        - !Ref AWS::NoValue
      EnableLogFileValidation: true
      EventSelectors:
        - IncludeManagementEvents: true
      IncludeGlobalServiceEvents: true
      IsLogging: true
      IsMultiRegionTrail: true
      IsOrganizationTrail: false
      KMSKeyId: !Ref KmsKey
      S3BucketName: !Ref BucketName
      S3KeyPrefix: !If
        - UseBucketPrefix
        - !Ref BucketPrefix
        - !Ref AWS::NoValue
      Tags:
        - Key: project
          Value: !Ref ProjectName
      TrailName: !Ref TrailName