AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  ### Stack Configuration
  ProjectName:
    Type: String
    Description: "[REQUIRED] The name of this project."

  ### CodeCommit Configuration
  CodeCommitStackName:
    Type: String
    Description: "[optional] The name of CodeCommit stack. (If you don't type anything, pipeline doesn't create source stage.)"
    Default: ""
  
  CodeCommitBranchName:
    Type: String
    Description: "[optional] The name of CodeCommit branch name for trigger pipeline."
    Default: "main"
  
  ### CodeBuild Configuration
  CodeBuildStackName:
    Type: String
    Description: "[optional] The name of CodeBuild stack. (If you don't type anything, pipeline doesn't create build stage.)"
    Default: ""

  ### CodeDeploy Configuration
  CodeDeployStackName:
    Type: String
    Description: "[optional] The name of CodeDeploy stack. (If you don't type anything, pipeline doesn't create deploy stage.)"
    Default: ""

  ### CodePipeline Configuration - Pipeline
  PipelineName:
    Type: String
    Description: "[REQUIRED] the name of CodePipeline pipeline."
  
  ServiceRoleName:
    Type: String
    Description: "[REQUIRED] The name of CodePipeline service IAM role."

  ### CodePipeline Configuration - Artifact Bucket
  ArtifactBucketName:
    Type: String
    Description: "[REQUIRED] The name of artifact S3 bucket."
  
  ArtifactEncryptionKeyId:
    Type: String
    Description: "[optional] The key ARN, id, alias ARN, or name to encrypt artifact S3 bucket. (Default is alias/aws/s3)"
    Default: "alias/aws/s3"
  
  ### CodePipeline Configuration - Deploy
  TaskDefinitionTemplatePath:
    Type: String
    Description: "[optional] The file name of the task definition."
    Default: "taskdef.json"
  
  AppSpecTemplatePath:
    Type: String
    Description: "[optional] The file name of the appspec."
    Default: "appspec.yaml"
  
  ### CodePipeline Configuration - EventBridge
  EventBridgeRoleName:
    Type: String
    Description: "[optional] The name of EventBridge IAM role."
    Default: ""
  
  EventBridgeRuleName:
    Type: String
    Description: "[optional] The name of EventBridge rule name."
    Default: ""

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Stack Configuration
        Parameters:
          - ProjectName
    
      - Label:
          default: CodeCommit Configuration
        Parameters:
          - CodeCommitStackName
          - CodeCommitBranchName
      
      - Label:
          default: CodeBuild Configuration
        Parameters:
          - CodeBuildStackName

      - Label:
          default: CodeDeploy Configuration
        Parameters:
          - CodeDeployStackName

      - Label:
          default: CodePipeline Configuration - Pipeline
        Parameters:
          - PipelineName
          - ServiceRoleName
      
      - Label:
          default: CodePipeline Configuration - Artifact Bucket
        Parameters:
          - ArtifactBucketName
          - ArtifactEncryptionKeyId
      
      - Label:
          default: CodePipeline Configuration - Deploy
        Parameters:
          - TaskDefinitionTemplatePath
          - AppSpecTemplatePath
      
      - Label:
          default: CodePipeline Configuration - EventBridge
        Parameters:
          - EventBridgeRoleName
          - EventBridgeRuleName

Conditions:
  # CodeCommit
  IsCodeCommitStackName: !Not [!Equals [!Ref CodeCommitStackName, ""]]

  # CodeBuild
  IsCodeBuildStackName: !Not [!Equals [!Ref CodeBuildStackName, ""]]

  # CodeDeploy
  IsCodeDeployStackName: !Not [!Equals [!Ref CodeDeployStackName, ""]]

  # CodePipeline
  UseArtifactEncryptionKeyId: !Not [ !Equals [!Ref ArtifactEncryptionKeyId, ""] ]

  UseTaskDefinitionTemplatePath: !Not [ !Equals [!Ref TaskDefinitionTemplatePath, ""] ]
  UseAppSpecTemplatePath: !Not [ !Equals [!Ref AppSpecTemplatePath, ""] ]

  UseEventBridgeRoleName: !Not [ !Equals [!Ref EventBridgeRoleName, ""] ]
  UseEventBridgeRuleName: !Not [ !Equals [!Ref EventBridgeRuleName, ""] ]

Resources:
  # CodePipeline
  ServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Description: !Ref ServiceRoleName
      MaxSessionDuration: 3600
      Path: /service-role/
      Policies:
        - PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Resource: "*"
                Action:
                  - iam:PassRole
                Condition:
                  StringEqualsIfExists:
                    iam:PassedToService:
                    - cloudformation.amazonaws.com
                    - elasticbeanstalk.amazonaws.com
                    - ec2.amazonaws.com
                    - ecs-tasks.amazonaws.com
              - Effect: Allow
                Resource: "*"
                Action:
                  - codecommit:CancelUploadArchive
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:GetRepository
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:UploadArchive
              - Effect: Allow
                Resource: "*"
                Action:
                  - codedeploy:CreateDeployment
                  - codedeploy:GetApplication
                  - codedeploy:GetApplicationRevision
                  - codedeploy:GetDeployment
                  - codedeploy:GetDeploymentConfig
                  - codedeploy:RegisterApplicationRevision
              - Effect: Allow
                Resource: "*"
                Action:
                  - codestar-connections:UseConnection
              - Effect: Allow
                Resource: "*"
                Action:
                  - elasticbeanstalk:*
                  - ec2:*
                  - elasticloadbalancing:*
                  - autoscaling:*
                  - cloudwatch:*
                  - s3:*
                  - sns:*
                  - cloudformation:*
                  - rds:*
                  - sqs:*
                  - ecs:*
              - Effect: Allow
                Resource: "*"
                Action:
                  - opsworks:CreateDeployment
                  - opsworks:DescribeApps
                  - opsworks:DescribeCommands
                  - opsworks:DescribeDeployments
                  - opsworks:DescribeInstances
                  - opsworks:DescribeStacks
                  - opsworks:UpdateApp
                  - opsworks:UpdateStack
              - Effect: Allow
                Resource: "*"
                Action:
                  - cloudformation:CreateStack
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeStacks
                  - cloudformation:UpdateStack
                  - cloudformation:CreateChangeSet
                  - cloudformation:DeleteChangeSet
                  - cloudformation:DescribeChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:SetStackPolicy
                  - cloudformation:ValidateTemplate
              - Effect: Allow
                Resource: "*"
                Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuildBatches
                  - codebuild:StartBuildBatch
              - Effect: Allow
                Resource: "*"
                Action:
                  - devicefarm:ListProjects
                  - devicefarm:ListDevicePools
                  - devicefarm:GetRun
                  - devicefarm:GetUpload
                  - devicefarm:CreateUpload
                  - devicefarm:ScheduleRun
              - Effect: Allow
                Resource: "*"
                Action:
                  - servicecatalog:ListProvisioningArtifacts
                  - servicecatalog:CreateProvisioningArtifact
                  - servicecatalog:DescribeProvisioningArtifact
                  - servicecatalog:DeleteProvisioningArtifact
                  - servicecatalog:UpdateProduct
              - Effect: Allow
                Resource: "*"
                Action:
                  - cloudformation:ValidateTemplate
              - Effect: Allow
                Resource: "*"
                Action:
                  - ecr:DescribeImages
              - Effect: Allow
                Resource: "*"
                Action:
                  - states:DescribeExecution
                  - states:DescribeStateMachine
                  - states:StartExecution
              - Effect: Allow
                Resource: "*"
                Action:
                  - appconfig:StartDeployment
                  - appconfig:StopDeployment
                  - appconfig:GetDeployment
          PolicyName: ServiceRolePolicy
      RoleName: !Ref ServiceRoleName
      Tags:
        - Key: project
          Value: !Ref ProjectName

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStores:
        - ArtifactStore:
            Location: !Ref ArtifactBucketName
            Type: S3
            EncryptionKey:
              Id: !If
                - UseArtifactEncryptionKeyId
                - !Ref ArtifactEncryptionKeyId
                - alias/aws/s3
              Type: KMS
          Region: !Ref AWS::Region
      Name: !Ref PipelineName
      RoleArn: !GetAtt ServiceRole.Arn
      Stages:
        - !If
          - IsCodeCommitStackName
          - Name: Source
            Actions:
              - Name: Source
                ActionTypeId:
                  Category: Source
                  Owner: AWS
                  Provider: CodeCommit
                  Version: "1"
                Configuration:
                  BranchName: !Ref CodeCommitBranchName
                  RepositoryName:
                    Fn::ImportValue:
                      !Sub ${CodeCommitStackName}-RepositoryName
                  PollForSourceChanges: false
                OutputArtifacts:
                  - Name: SourceArtifact
                RunOrder: 1
          - !Ref AWS::NoValue
        - !If
          - IsCodeBuildStackName
          - Name: Build
            Actions:
              - Name: Build
                ActionTypeId:
                  Category: Build
                  Owner: AWS
                  Provider: CodeBuild
                  Version: "1"
                Configuration:
                  ProjectName:
                    Fn::ImportValue:
                      !Sub ${CodeBuildStackName}-BuildProjectName
                InputArtifacts:
                  - Name: SourceArtifact
                OutputArtifacts:
                  - Name: BuildArtifact
                RunOrder: 1
          - !Ref AWS::NoValue
        - !If
          - IsCodeDeployStackName
          - Name: Deploy
            Actions:
              - Name: Deploy
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Provider: CodeDeployToECS
                  Version: "1"
                Configuration:
                  ApplicationName:
                    Fn::ImportValue:
                      !Sub ${CodeDeployStackName}-ApplicationName
                  DeploymentGroupName:
                    Fn::ImportValue:
                      !Sub ${CodeDeployStackName}-DeploymentGroupName
                  TaskDefinitionTemplateArtifact: SourceArtifact
                  AppSpecTemplateArtifact: SourceArtifact
                  AppSpecTemplatePath: !If
                    - UseAppSpecTemplatePath
                    - !Ref AppSpecTemplatePath
                    - appspec.yaml
                  TaskDefinitionTemplatePath: !If
                    - UseTaskDefinitionTemplatePath
                    - !Ref TaskDefinitionTemplatePath
                    - taskdef.json
                  Image1ArtifactName: BuildArtifact
                  Image1ContainerName: IMAGE1_NAME
                InputArtifacts:
                  - Name: SourceArtifact
                  - Name: BuildArtifact
                RunOrder: 1
          - !Ref AWS::NoValue
      Tags:
        - Key: project
          Value: !Ref ProjectName
  
  EventBridgeRole:
    Type: AWS::IAM::Role
    Condition: IsCodeCommitStackName
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - events.amazonaws.com
      Description: !If
        - UseEventBridgeRoleName
        - !Ref EventBridgeRoleName
        - !Sub ${Pipeline}-cwe-role
      MaxSessionDuration: 3600
      Path: /service-role/
      Policies:
        - PolicyName: start-pipeline-execution
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - codepipeline:StartPipelineExecution
                Resource:
                  - !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${Pipeline}
      RoleName: !If
        - UseEventBridgeRoleName
        - !Ref EventBridgeRoleName
        - !Sub ${Pipeline}-cwe-role
      Tags:
        - Key: project
          Value: !Ref ProjectName

  EventBridgeRule:
    Type: AWS::Events::Rule
    Condition: IsCodeCommitStackName
    Properties: 
      Description: !If
        - UseEventBridgeRuleName
        - !Ref EventBridgeRuleName
        - !Sub ${Pipeline}-cwe-rule
      Name: !If
        - UseEventBridgeRuleName
        - !Ref EventBridgeRuleName
        - !Sub ${Pipeline}-cwe-rule
      EventPattern:
        source:
          - aws.codecommit
        detail-type:
          - CodeCommit Repository State Change
        resources:
          - Fn::ImportValue:
              !Sub ${CodeCommitStackName}-RepositoryArn
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceType:
            - branch
          referenceName:
            - !Ref CodeCommitBranchName
      Targets:
        - Arn: !Sub arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${Pipeline}
          RoleArn: !GetAtt EventBridgeRole.Arn
          Id: !Ref Pipeline
