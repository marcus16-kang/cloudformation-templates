AWSTemplateFormatVersion: "2010-09-09"

Description: "AWS CodeBuild (Build Image) Stack for EKS Rollout CI/CD."

Parameters:
  ### Stack Configuration
  ProjectName:
    Type: String
    Description: "[REQUIRED] The name of this project."
  
  ### CodeCommit Configuration
  CodeCommitStackName:
    Type: String
    Description: "[REQUIRED] The name of CodeCommit stack."

  ### CodeBuild Configuration - General
  BuildProjectName:
    Type: String
    Description: "[REQUIRED] The name of CodeBuild project."
  
  ServiceRoleName:
    Type: String
    Description: "[REQUIRED] The name of CodeBuild service IAM role."
  
  EncryptionKey:
    Type: String
    Description: "[optional] The ARN or Alias of KMS key for encrypt artifacts. (Default is alias/aws/s3.)"
    Default: "alias/aws/s3"

  ComputeType:
    Type: String
    Description: "[optional] The type of CodeBuild compute type. (The ARM container DOES NOT SUPPORT 'BUILD_GENERAL1_MEDIUM'.)"
    AllowedValues:
      - "BUILD_GENERAL1_SMALL"
      - "BUILD_GENERAL1_MEDIUM"
      - "BUILD_GENERAL1_LARGE"
    Default: "BUILD_GENERAL1_SMALL"
  
  Image:
    Type: String
    Description: "[REQUIRED] The image tag of CodeBuild image."
    AllowedValues:
      - "aws/codebuild/amazonlinux2-x86_64-standard:4.0"
      - "aws/codebuild/amazonlinux2-x86_64-standard:5.0"
      - "aws/codebuild/amazonlinux2-aarch64-standard:2.0"
      - "aws/codebuild/amazonlinux2-aarch64-standard:3.0"
  
  ArchitectureType:
    Type: String
    Description: "[REQUIRED] The type of CodeBuild architecture type."
    AllowedValues:
      - "LINUX_CONTAINER"
      - "ARM_CONTAINER"
  
  BuildSpecFileName:
    Type: String
    Description: "[REQUIRED] The name of buildspec file for build image."
    Default: "buildspec.yaml"
  
  ### CodeBuild Configuration - Artifact
  ArtifactBucketName:
    Type: String
    Description: "[REQUIRED] The name of artifact S3 bucket."
  
  ArtifactBranchName:
    Type: String
    Description: "[REQUIRED] The name of artifact git branch."
    Default: "main"

  ### CodeBuild Configuration - Container
  ImageRepositoryName:
    Type: String
    Description: "[REQUIRED] The name of image repository."

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Stack Configuration
        Parameters:
          - ProjectName
      
      - Label:
          default: CodeCommit Configuration
        Parameters:
          - CodeCommitStackName
      
      - Label:
          default: CodeBuild Configuration - General
        Parameters:
          - BuildProjectName
          - ServiceRoleName
          - ComputeType
          - Image
          - ArchitectureType
          - BuildSpecFileName
      
      - Label:
          default: CodeBuild Configuration - Artifact
        Parameters:
          - ArtifactBucketName
          - ArtifactBranchName

      - Label:
          default: CodeBuild Configuration - Container
        Parameters:
          - ImageRepositoryName

Conditions:
  # CodeBuild
  UseEncryptionKey: !Not [!Equals [!Ref EncryptionKey, ""]]

Resources:
  ServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Principal:
            Service: codebuild.amazonaws.com
          Action: sts:AssumeRole
      Description: !Ref ServiceRoleName
      MaxSessionDuration: 3600
      Path: /service-role/
      Policies:
        - PolicyName: CodeBuildBasePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Resource:
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${BuildProjectName}"
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${BuildProjectName}:*"
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
              - Effect: Allow
                Resource:
                  - !Sub "arn:aws:s3:::${ArtifactBucketName}*"  # codepipeline bucket
                Action:
                  - "s3:PutObject"
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:GetBucketAcl"
                  - "s3:GetBucketLocation"
              - Effect: Allow
                Resource:
                  - Fn::ImportValue:
                      !Sub ${CodeCommitStackName}-RepositoryArn
                Action:
                  - "codecommit:GitPull"
              - Effect: Allow
                Resource:
                  - !Sub "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:report-group/${BuildProjectName}-*"
                Action:
                  - "codebuild:CreateReportGroup"
                  - "codebuild:CreateReport"
                  - "codebuild:UpdateReport"
                  - "codebuild:BatchPutTestCases"
                  - "codebuild:BatchPutCodeCoverages"
        - PolicyName: EcrPushPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "ecr:CompleteLayerUpload"
                  - "ecr:UploadLayerPart"
                  - "ecr:InitiateLayerUpload"
                  - "ecr:BatchCheckLayerAvailability"
                  - "ecr:BatchGetImage"
                  - "ecr:PutImage"
                Resource:
                  - !Sub arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/${ImageRepositoryName}
              - Effect: Allow
                Action:
                  - "ecr:GetAuthorizationToken"
                Resource: "*"
      RoleName: !Ref ServiceRoleName
      Tags:
        - Key: project
          Value: !Ref ProjectName

  BuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: NO_ARTIFACTS
      BadgeEnabled: true
      Cache:
        Type: LOCAL
        Modes:
          - "LOCAL_SOURCE_CACHE"
          - "LOCAL_DOCKER_LAYER_CACHE"
      Description: !Ref BuildProjectName
      EncryptionKey: !If
        - UseEncryptionKey
        - !Ref EncryptionKey
        - alias/aws/s3
      Environment:
        ComputeType: !Ref ComputeType
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: !Ref AWS::Region
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
          - Name: IMAGE_REPO_NAME
            Value: !Ref ImageRepositoryName
        Image: !Ref Image
        ImagePullCredentialsType: CODEBUILD
        PrivilegedMode: true
        Type: !Ref ArchitectureType
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
          # GroupName: # If you want to speficy log group, please change codebuild service role policy.
          # StreamName: 
      Name: !Ref BuildProjectName
      QueuedTimeoutInMinutes: 120
      ServiceRole: !GetAtt ServiceRole.Arn
      Source:
        GitCloneDepth: 1
        GitSubmodulesConfig:
          FetchSubmodules: true
        Location:
          Fn::ImportValue:
            !Sub ${CodeCommitStackName}-RepositoryName
        Type: CODECOMMIT
        BuildSpec: !Ref BuildSpecFileName
      SourceVersion: !Sub refs/heads/${ArtifactBranchName}
      Tags:
        - Key: project
          Value: !Ref ProjectName
      TimeoutInMinutes: 30
      # Triggers: {}
      Visibility: PRIVATE
      # VpcConfig:
  
Outputs:
  BuildProjectName:
    Value: !Ref BuildProject
    Export:
      Name: !Sub ${AWS::StackName}-BuildProjectName
  
  BuildProjectArn:
    Value: !GetAtt BuildProject.Arn
    Export:
      Name: !Sub ${AWS::StackName}-BuildProjectArn
