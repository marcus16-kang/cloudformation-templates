AWSTemplateFormatVersion: "2010-09-09"

Resources:
  # https://github.com/aws-quickstart/quickstart-amazon-eks-cluster-resource-provider/blob/main/execution-role.template.yaml
  ClusterResourceExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      MaxSessionDuration: 8400
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                [
                  resources.cloudformation.amazonaws.com,
                  cloudformation.amazonaws.com,
                  lambda.amazonaws.com,
                ]
            Action: sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: ResourceTypePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "sts:GetCallerIdentity"
                  - "eks:CreateCluster"
                  - "eks:DeleteCluster"
                  - "eks:DescribeCluster"
                  - "eks:ListTagsForResource"
                  - "eks:UpdateClusterVersion"
                  - "eks:UpdateClusterConfig"
                  - "eks:TagResource"
                  - "eks:UntagResource"
                  - "iam:PassRole"
                  - "sts:AssumeRole"
                  - "lambda:UpdateFunctionConfiguration"
                  - "lambda:DeleteFunction"
                  - "lambda:GetFunction"
                  - "lambda:InvokeFunction"
                  - "lambda:CreateFunction"
                  - "lambda:UpdateFunctionCode"
                  - "ec2:DescribeVpcs"
                  - "ec2:DescribeSubnets"
                  - "ec2:DescribeSecurityGroups"
                  - "kms:CreateGrant"
                  - "kms:DescribeKey"
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:DescribeLogGroups"
                  - "logs:DescribeLogStreams"
                  - "logs:PutLogEvents"
                  - "cloudwatch:ListMetrics"
                  - "cloudwatch:PutMetricData"
                Resource: "*"
  ClusterResourceVpcProxyRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CloudFormation-Kubernetes-VPC
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaENIManagementAccess"
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"

  # https://github.com/aws-quickstart/quickstart-kubernetes-resource-provider/blob/main/execution-role.template.yaml
  KubernetesResourceExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      MaxSessionDuration: 8400
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "lambda.amazonaws.com" # required for EKS clusters with Public Endpoint disabled
                - "resources.cloudformation.amazonaws.com"
            Action: sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: ResourceTypePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "secretsmanager:GetSecretValue" # required for deploying helm charts into non-EKS kubernetes clusters
                  - "kms:Decrypt"
                  - "eks:DescribeCluster"
                  - "s3:GetObject"
                  - "sts:AssumeRole"
                  - "sts:GetCallerIdentity"
                  - "iam:PassRole" # required for EKS clusters with Public Endpoint disabled
                  - "ec2:CreateNetworkInterface" # required for EKS clusters with Public Endpoint disabled
                  - "ec2:DescribeNetworkInterfaces" # required for EKS clusters with Public Endpoint disabled
                  - "ec2:DeleteNetworkInterface" # required for EKS clusters with Public Endpoint disabled
                  - "ec2:DescribeVpcs" # required for EKS clusters with Public Endpoint disabled
                  - "ec2:DescribeSubnets" # required for EKS clusters with Public Endpoint disabled
                  - "ec2:DescribeRouteTables" # required for EKS clusters with Public Endpoint disabled
                  - "ec2:DescribeSecurityGroups" # required for EKS clusters with Public Endpoint disabled
                  - "logs:CreateLogGroup" # required for EKS clusters with Public Endpoint disabled
                  - "logs:CreateLogStream" # required for EKS clusters with Public Endpoint disabled
                  - "logs:PutLogEvents" # required for EKS clusters with Public Endpoint disabled
                  - "lambda:UpdateFunctionConfiguration" # required for EKS clusters with Public Endpoint disabled
                  - "lambda:DeleteFunction" # required for EKS clusters with Public Endpoint disabled
                  - "lambda:GetFunction" # required for EKS clusters with Public Endpoint disabled
                  - "lambda:InvokeFunction" # required for EKS clusters with Public Endpoint disabled
                  - "lambda:CreateFunction" # required for EKS clusters with Public Endpoint disabled
                  - "lambda:UpdateFunctionCode" # required for EKS clusters with Public Endpoint disabled
                  - "logs:CreateLogGroup" # required if this role is also used for Resource type logging
                  - "logs:CreateLogStream" # required if this role is also used for Resource type logging
                  - "logs:DescribeLogGroups" # required if this role is also used for Resource type logging
                  - "logs:DescribeLogStreams" # required if this role is also used for Resource type logging
                  - "logs:PutLogEvents" # required if this role is also used for Resource type logging
                  - "cloudwatch:ListMetrics" # required if this role is also used for Resource type logging
                  - "cloudwatch:PutMetricData" # required if this role is also used for Resource type logging
                  - "ssm:PutParameter" # ssm parameters are used by the ::Get resource to track requests
                  - "ssm:GetParameter" # ssm parameters are used by the ::Get resource to track requests
                  - "ssm:DeleteParameter" # ssm parameters are used by the ::Get resource to track requests
                Resource: "*"

  # https://github.com/aws-quickstart/quickstart-helm-resource-provider/blob/main/execution-role.template.yaml
  HelmResourceExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      MaxSessionDuration: 8400
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "lambda.amazonaws.com" # required for EKS clusters with Public Endpoint disabled
                - "resources.cloudformation.amazonaws.com"
            Action: sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: ResourceTypePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "secretsmanager:GetSecretValue" # required for deploying helm charts into non-EKS kubernetes clusters
                  - "kms:Decrypt"
                  - "eks:DescribeCluster"
                  - "s3:GetObject"
                  - "sts:AssumeRole"
                  - "iam:PassRole" # required for EKS clusters with Public Endpoint disabled
                  - "ec2:CreateNetworkInterface" # required for EKS clusters with Public Endpoint disabled
                  - "ec2:DescribeNetworkInterfaces" # required for EKS clusters with Public Endpoint disabled
                  - "ec2:DeleteNetworkInterface" # required for EKS clusters with Public Endpoint disabled
                  - "ec2:DescribeVpcs" # required for EKS clusters with Public Endpoint disabled
                  - "ec2:DescribeSubnets" # required for EKS clusters with Public Endpoint disabled
                  - "ec2:DescribeRouteTables" # required for EKS clusters with Public Endpoint disabled
                  - "ec2:DescribeSecurityGroups" # required for EKS clusters with Public Endpoint disabled
                  - "logs:CreateLogGroup" # required for EKS clusters with Public Endpoint disabled
                  - "logs:CreateLogStream" # required for EKS clusters with Public Endpoint disabled
                  - "logs:PutLogEvents" # required for EKS clusters with Public Endpoint disabled
                  - "lambda:UpdateFunctionConfiguration" # required for EKS clusters with Public Endpoint disabled
                  - "lambda:DeleteFunction" # required for EKS clusters with Public Endpoint disabled
                  - "lambda:GetFunction" # required for EKS clusters with Public Endpoint disabled
                  - "lambda:InvokeFunction" # required for EKS clusters with Public Endpoint disabled
                  - "lambda:CreateFunction" # required for EKS clusters with Public Endpoint disabled
                  - "lambda:UpdateFunctionCode" # required for EKS clusters with Public Endpoint disabled
                  - "cloudformation:ListExports" # required for fetching contract test inputs
                  - "ecr:GetAuthorizationToken" # required for fetching charts from ECR
                  - "ecr:BatchCheckLayerAvailability" # required for fetching charts from ECR
                  - "ecr:GetDownloadUrlForLayer" # required for fetching charts from ECR
                  - "ecr:BatchGetImage" # required for fetching charts from ECR
                Resource: "*"
  
  ClusterResourceProvider:
    Type: AWS::CloudFormation::TypeActivation
    Properties:
      AutoUpdate: true
      ExecutionRoleArn: !GetAtt ClusterResourceExecutionRole.Arn
      PublisherId: 408988dff9e863704bcc72e7e13f8d645cee8311
      Type: RESOURCE
      TypeName: AWSQS::EKS::Cluster
  
  KubernetesResourceProvider:
    Type: AWS::CloudFormation::TypeActivation
    Properties:
      AutoUpdate: true
      ExecutionRoleArn: !GetAtt KubernetesResourceExecutionRole.Arn
      PublisherId: 408988dff9e863704bcc72e7e13f8d645cee8311
      Type: RESOURCE
      TypeName: AWSQS::Kubernetes::Resource
  
  KubernetesResourceGetProvider:
    Type: AWS::CloudFormation::TypeActivation
    Properties:
      AutoUpdate: true
      ExecutionRoleArn: !GetAtt KubernetesResourceExecutionRole.Arn
      PublisherId: 408988dff9e863704bcc72e7e13f8d645cee8311
      Type: RESOURCE
      TypeName: AWSQS::Kubernetes::Get
  
  HelmResourceProvider:
    Type: AWS::CloudFormation::TypeActivation
    Properties:
      AutoUpdate: true
      ExecutionRoleArn: !GetAtt HelmResourceExecutionRole.Arn
      PublisherId: 408988dff9e863704bcc72e7e13f8d645cee8311
      Type: RESOURCE
      TypeName: AWSQS::Kubernetes::Helm

Outputs:
  ClusterResourceExecutionRoleArn:
    Value: !GetAtt ClusterResourceExecutionRole.Arn

  KubernetesResourceExecutionRoleArn:
    Value: !GetAtt KubernetesResourceExecutionRole.Arn

  HelmResourceExecutionRoleArn:
    Value: !GetAtt HelmResourceExecutionRole.Arn
