AWSTemplateFormatVersion: "2010-09-09"

Description: Cluster Autoscaler for EKS cluster.

Parameters:
  ClusterName:
    Type: String
    Description: "[REQUIRED] The name of EKS cluster."
  
  ClusterOidcProvider:
    Type: String
    Description: "[REQUIRED] The IAM OIDC Provider for EKS cluster."

  ClusterOidcIssuerUrl:
    Type: String
    Description: "[REQUIRED] The OIDC Issuer URL of EKS cluster." 
  
  ClusterAutoscalerRoleName:
    Type: String
    Description: "[optional] The name of Cluster Autoscaler's IAM Role."
    Default: ""
  
  ServiceAccountRoleConfigArn:
    Type: String
    Description: "[REQUIRED] The ARN of ServiceAccountRoleConfigFunction."
  
  ProjectName:
    Type: String
    Description: "[REQUIRED] The name of this project."

  ClusterVersion:
    Type: String
    Description: "[REQUIRED] The version of EKS cluster."
    AllowedValues:
      - "1.21"
      - "1.22"
      - "1.23"
      - "1.24"
    Default: "1.24"

Conditions:
  UseClusterAutoscalerRoleName:
    !Not [!Equals [!Ref ClusterAutoscalerRoleName, ""]]

Mappings:
  ClusterAutoscalerImageVersionMap:
    "1.21":
      latest: "1.21.2"
    "1.22":
      latest: "1.22.2"
    "1.23":
      latest: "1.23.0"
    "1.24":
      latest: "1.24.0"

Resources:
  ClusterAutoscalerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Federated: !Ref ClusterOidcProvider
            Action:
              - "sts:AssumeRoleWithWebIdentity"
      Path: /
      Policies:
        - PolicyName: AmazonEKSClusterAutoscalerPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
            - Effect: Allow
              Action:
              - autoscaling:DescribeAutoScalingGroups
              - autoscaling:DescribeAutoScalingInstances
              - autoscaling:DescribeLaunchConfigurations
              - autoscaling:DescribeScalingActivities
              - autoscaling:DescribeTags
              - ec2:DescribeInstanceTypes
              - ec2:DescribeLaunchTemplateVersions
              Resource:
              - "*"
            - Effect: Allow
              Action:
              - autoscaling:SetDesiredCapacity
              - autoscaling:TerminateInstanceInAutoScalingGroup
              - ec2:DescribeImages
              - ec2:GetInstanceTypesFromInstanceRequirements
              - eks:DescribeNodegroup
              Resource:
              - "*"
      RoleName: !If
        - UseClusterAutoscalerRoleName
        - !Ref ClusterAutoscalerRoleName
        - !Sub "${ClusterName}-cluster-autoscaler-role"
      Tags:
        - Key: Name
          Value: !If
            - UseClusterAutoscalerRoleName
            - !Ref ClusterAutoscalerRoleName
            - !Sub "${ClusterName}-cluster-autoscaler-role"
        - Key: project
          Value: !Ref ProjectName

  ClusterAutoscalerRoleConfig:
    Type: Custom::ServiceAccountRoleConfig
    Properties:
      ServiceToken: !Ref ServiceAccountRoleConfigArn
      RoleName: !Ref ClusterAutoscalerRole
      OidcIssuerUrl: !Ref ClusterOidcIssuerUrl
      OidcArn: !Ref ClusterOidcProvider
      Namespace: kube-system
      ServiceAccount: cluster-autoscaler

  ClusterAutoscalerHelmChart:
    Type: AWSQS::Kubernetes::Helm
    Properties:
      ClusterID: !Ref ClusterName
      Name: autoscaler
      Namespace: kube-system
      Repository: https://kubernetes.github.io/autoscaler
      Chart: autoscaler/cluster-autoscaler
      ValueYaml: !Sub
        - |
          autoDiscovery:
            clusterName: ${cluster_name}
          cloudProvider: aws
          rbac:
            serviceAccount:
              annotations:
                eks.amazonaws.com/role-arn: ${cluster_autoscaler_role}
              create: true
              name: cluster-autoscaler
          image:
            tag: v${image_tag}
          podAnnotations:
            cluster-autoscaler.kubernetes.io/safe-to-evict: 'false'
          extraArgs:
            logtostderr: true
            stderrthreshold: info
            v: 4
            skip-nodes-with-local-storage: false
            expander: least-waste
            balance-similar-node-groups: true
            skip-nodes-with-system-pods: false
        
        - cluster_name: !Ref ClusterName
          cluster_autoscaler_role: !GetAtt ClusterAutoscalerRole.Arn
          image_tag: !FindInMap [ClusterAutoscalerImageVersionMap, !Ref ClusterVersion, latest]

  ClusterAutoscalerOverProvisioningPod:
    Type: AWSQS::Kubernetes::Resource
    # DependsOn: ClusterAutoscalerDeploymentImageUpdate
    # DependsOn: ClusterAutoscalerResources
    DependsOn: ClusterAutoscalerHelmChart
    Properties:
      ClusterName: !Ref ClusterName
      Namespace: kube-system
      Manifest: |
        ---
        apiVersion: scheduling.k8s.io/v1
        kind: PriorityClass
        metadata:
          name: overprovisioning
        value: -1
        globalDefault: false
        ---
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: overprovisioning
          namespace: kube-system
        spec:
          replicas: 3
          selector:
            matchLabels:
              run: overprovisioning
          template:
            metadata:
              labels:
                run: overprovisioning
            spec:
              priorityClassName: overprovisioning
              containers:
              - name: reserve-resources
                image: k8s.gcr.io/pause
                resources:
                  requests:
                    cpu: 820m
                    memory: 2000Mi