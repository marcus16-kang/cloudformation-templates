AWSTemplateFormatVersion: "2010-09-09"

Description: "Create S3 bucket for CodePipeline ."

Parameters:
  # Stack Configuration
  ProjectName:
    Type: String
    Description: "[REQUIRED] The name of this project."
  
  # S3 Configuration
  BucketName:
    Type: String
    Description: "[REQUIRED] The name of S3 bucket."
  
  EncryptionKeyId:
    Type: String
    Description: "[optional] The key ARN, id, alias ARN, or name to encrypt S3 bucket. (Default is alias/aws/s3)"
    Default: "alias/aws/s3"
  
  LoggingDestinationBucketName:
    Type: String
    Description: "[optional] The bucket name of S3 bucket logging destination."
    Default: ""
  
  LoggingDestinationPrefix:
    Type: String
    Description: "[optional] The log prefix of S3 bucket logging."
    Default: ""

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Stack Configuration
        Parameters:
          - ProjectName
      
      - Label:
          default: S3 Configuration
        Parameters:
          - BucketName
          - EncryptionKeyId
          - LoggingDestinationBucketName
          - LoggingDestinationPrefix

Conditions:
  UseEncryptionKeyId: !Not [ !Equals [!Ref EncryptionKeyId, ""] ]
  UseLogging: !Not [ !Equals [!Ref LoggingDestinationBucketName, ""] ]
  UseLoggingPrefix: !Not [ !Equals [!Ref LoggingDestinationPrefix, ""] ]

Resources:
  # S3
  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - BucketKeyEnabled: true
            ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: !If
                - UseEncryptionKeyId
                - !Ref EncryptionKeyId
                - alias/aws/s3
      BucketName: !Ref BucketName
      IntelligentTieringConfigurations:
        - Id: intelligence-tiering
          Status: Enabled
          Tierings:
            - AccessTier: ARCHIVE_ACCESS
              Days: 90
            - AccessTier: DEEP_ARCHIVE_ACCESS 
              Days: 180
      LifecycleConfiguration:
        Rules:
          - Id: intelligence-tiering
            NoncurrentVersionTransitions:
              - StorageClass: STANDARD_IA
                TransitionInDays: 30
              - StorageClass: ONEZONE_IA
                TransitionInDays: 90
              - StorageClass: GLACIER
                TransitionInDays: 180
              - StorageClass: DEEP_ARCHIVE
                TransitionInDays: 360
            Status: Enabled
            Transitions:
              - StorageClass: INTELLIGENT_TIERING
                TransitionInDays: 0
      LoggingConfiguration: !If
        - UseLogging
        - DestinationBucketName: !Ref LoggingDestinationBucketName
          LogFilePrefix: !If
            - UseLoggingPrefix
            - !Ref LoggingDestinationPrefix
            - !Ref AWS::NoValue
        - !Ref AWS::NoValue
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerEnforced
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: project
          Value: !Ref ProjectName
      VersioningConfiguration:
        Status: Enabled

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref Bucket
      PolicyDocument:
        Version: "2012-10-17"
        Id: SSEAndSSLPolicy
        Statement:
        - Sid: DenyUnEncryptedObjectUploads
          Effect: Deny
          Principal: "*"
          Action: s3:PutObject
          Resource: !Sub arn:aws:s3:::${Bucket}/*
          Condition:
            StringNotEquals:
              s3:x-amz-server-side-encryption: aws:kms
        - Sid: DenyInsecureConnections
          Effect: Deny
          Principal: "*"
          Action: s3:*
          Resource: !Sub arn:aws:s3:::${Bucket}/*
          Condition:
            Bool:
              aws:SecureTransport: "false"

Outputs:
  BucketName:
    Value: !Ref Bucket
  
  BucketArn:
    Value: !GetAtt Bucket.Arn
  
  BucketRegion:
    Value: !Ref AWS::Region